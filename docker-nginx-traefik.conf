# Nginx конфигурация для Traefik
# ⚠️ БЕЗ SSL - Traefik сам управляет HTTPS

server {
    listen 80;
    server_name _;

    # Максимальный размер загружаемого файла
    client_max_body_size 100M;

    # Gzip компрессия для лучшей скорости
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # ═══════════════════════════════════════════════════════════════
    # Frontend приложение (React/SPA)
    # ═══════════════════════════════════════════════════════════════

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # React Router - для SPA приложений
        # Все запросы на несуществующие файлы идут на index.html
        try_files $uri $uri/ /index.html;

        # Кеширование HTML
        expires -1;
        add_header Cache-Control "public, no-cache";
    }

    # ═══════════════════════════════════════════════════════════════
    # API проксирование
    # ═══════════════════════════════════════════════════════════════

    location /api {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket поддержка
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Буферизация
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # ═══════════════════════════════════════════════════════════════
    # Статические файлы (CSS, JS, изображения и т.д.)
    # Долгий кеш для оптимизации скорости
    # ═══════════════════════════════════════════════════════════════

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
        root /usr/share/nginx/html;
        
        # Кеширование на 1 год для статических файлов
        expires 365d;
        add_header Cache-Control "public, immutable";
        
        # Дополнительные headers для оптимизации
        add_header Vary "Accept-Encoding";
    }

    # ═══════════════════════════════════════════════════════════════
    # Health check для Docker
    # ═══════════════════════════════════════════════════════════════

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ═══════════════════════════════════════════════════════════════
    # Security Headers
    # ═══════════════════════════════════════════════════════════════

    # Запретить встраивание в iframe
    add_header X-Frame-Options "DENY" always;

    # Запретить MIME-sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # XSS защита
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer-Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions-Policy (бывший Feature-Policy)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # ═══════════════════════════════════════════════════════════════
    # Запрещенные расширения
    # ═══════════════════════════════════════════════════════════════

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
